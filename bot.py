import telebot
import logging
import base64
import io
from config import (
    TELEGRAM_BOT_TOKEN,
    setup_logging_globally,
    FUSIONBRAIN_URL,
    FUSIONBRAIN_API_KEY,
    FUSIONBRAIN_SECRET_KEY,
)
from llm_agent import GigaChatManagerAssistant
from image_generator import FusionBrainAPI

setup_logging_globally()
logger = logging.getLogger(__name__)

bot = telebot.TeleBot(TELEGRAM_BOT_TOKEN)
gigachat_manager = GigaChatManagerAssistant()

try:
    fusionbrain_api = FusionBrainAPI(
        FUSIONBRAIN_URL, FUSIONBRAIN_API_KEY, FUSIONBRAIN_SECRET_KEY
    )
    pipeline_id = fusionbrain_api.get_pipeline()
    logger.info(f"FusionBrain pipeline ID: {pipeline_id}")
except Exception as e:
    logger.error(f"–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ FusionBrain: {e}")
    fusionbrain_api = None
    pipeline_id = None

# –§–∞–π–ª: bot.py

participants = {
    "–Ω–∞–¥–µ–∂–¥–∞": {
        "name": "–°–æ—Ä–≤–∞–Ω–æ–≤–∞ –ù–∞–¥–µ–∂–¥–∞ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–Ω–∞",
        "role": "–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –∞–¥–∞–ø—Ç–∞—Ü–∏–∏ –∏ –∞–Ω–∞–ª–∏–∑—É",
        "raw_data": "–ì–∏–±–∫–æ—Å—Ç—å, –∞–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å, —ç–º–ø–∞—Ç–∏—è, –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏",
        "aliases": ["–Ω–∞–¥–µ–∂–¥–∞", "–Ω–∞–¥—è", "—Å–æ—Ä–≤–∞–Ω–æ–≤–∞", "–Ω–∞–¥–µ–Ω—å–∫–∞"],
        "gender": "–∂–µ–Ω—â–∏–Ω–∞",
        "age": "27-30",
        "interesting_facts": [
            "–í–ø–µ—Ä–≤—ã–µ –≤—Å—Ç–∞–≤ –Ω–∞ –∫–æ–Ω—å–∫–∏ –≤ –ø–æ–¥—Ä–æ—Å—Ç–∫–æ–≤–æ–º –≤–æ–∑—Ä–∞—Å—Ç–µ, —Å—Ä–∞–∑—É –Ω–∞—á–∞–ª–∞ —É–≤–µ—Ä–µ–Ω–Ω–æ –∫–∞—Ç–∞—Ç—å—Å—è.",
            "–ö–∞–∂–¥—ã–π –¥–µ–Ω—å –Ω–∞—á–∏–Ω–∞–µ—Ç —Å 5 –º–∏–Ω—É—Ç —Ç–∏—à–∏–Ω—ã, —á—Ç–æ–±—ã –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å—Å—è –Ω–∞ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ã–π –¥–µ–Ω—å.",
            "–õ—é–±–∏—Ç –ø—Ä–æ–≤–æ–¥–∏—Ç—å —Å–≤–æ–±–æ–¥–Ω–æ–µ –≤—Ä–µ–º—è —Å –¥–µ—Ç—å–º–∏ –∑–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–º –º—É–ª—å—Ç—Ñ–∏–ª—å–º–æ–≤.",
        ],
    },
    "—é–ª–∏—è": {
        "name": "–ñ–¥–∞–Ω–æ–≤–∞ –Æ–ª–∏—è –ë–æ—Ä–∏—Å–æ–≤–Ω–∞",
        "role": "–ò–Ω–∏—Ü–∏–∞—Ç–æ—Ä –∏–¥–µ–π –∏ –∫–æ–º–∞–Ω–¥–Ω—ã–π –∏–≥—Ä–æ–∫",
        "raw_data": "–ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å, –æ–±—É—á–∞–µ–º–æ—Å—Ç—å, –ø–æ–∏—Å–∫ –∏–¥–µ–π, –∫–æ–º–∞–Ω–¥–Ω–∞—è —Ä–∞–±–æ—Ç–∞. –•–æ—á–µ—Ç—Å—è –∑–∞–Ω–∏–º–∞—Ç—å—Å—è –≤–Ω–µ–¥—Ä–µ–Ω–∏–µ–º –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤",
        "aliases": ["—é–ª–∏—è", "—é–ª—è", "–∂–¥–∞–Ω–æ–≤–∞", "—é–ª–µ—á–∫–∞"],
        "gender": "–∂–µ–Ω—â–∏–Ω–∞",
        "age": "30-35",
        "interesting_facts": [
            "–°—á–∞—Å—Ç–ª–∏–≤–∞—è –º–∞–º–∞ —Ä–µ–±–µ–Ω–∫–∞ 4.5 –ª–µ—Ç.",
            "–í 33 –≥–æ–¥–∞ –≤—Å—Ç–∞–ª–∞ –Ω–∞ —Å–Ω–æ—É–±–æ—Ä–¥ –∏ —Å–ø—É—Å—Ç–∏–ª–∞—Å—å —Å –≠–ª—å–±—Ä—É—Å–∞.",
            "–í 34 –≥–æ–¥–∞ –æ—Å–≤–æ–∏–ª–∞ –≤–µ–π–∫–±–æ—Ä–¥.",
            "–õ—é–±–∏—Ç —á–∏—Ç–∞—Ç—å, —Ö–æ–¥–∏—Ç—å –≤ —Ç–µ–∞—Ç—Ä—ã –∏ –∏–∑—É—á–∞—Ç—å –Ω–æ–≤–æ–µ.",
        ],
    },
    "–∏–≤–∞–Ω": {
        "name": "–ñ–∞–¥–∞–Ω –ò–≤–∞–Ω –í–∞–ª–µ—Ä—å–µ–≤–∏—á",
        "role": "–ò–¥–µ–æ–ª–æ–≥ –∏ –∫–æ–º–º—É–Ω–∏–∫–∞—Ç–æ—Ä",
        "raw_data": "–û—Ç–ª–∏—á–Ω–æ —Ä–∞–∑–≤–∏–≤–∞—é —Å—ã—Ä—ã–µ –∏–¥–µ–∏, –±–æ–ª—å—à–∞—è –Ω–∞—Å–º–æ—Ç—Ä–µ–Ω–Ω–æ—Å—Ç—å, –Ω–µ–¥–æ–≤–æ–ª—å—Å—Ç–≤–æ –æ–∫—Ä—É–∂–∞—é—â–∏–º–∏ —Å–µ—Ä–≤–∏—Å–∞–º–∏/–æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–µ–π –±—ã—Ç–∞ –∫–∞–∫ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è —Å –∏–¥–µ—è–º–∏ –ø–æ —Ä–∞–∑–≤–∏—Ç–∏—é. –ú–æ–≥—É –Ω–∞–π—Ç–∏ –æ–±—â–∏–π —è–∑—ã–∫ –∏ —Ç–µ–º—ã –¥–ª—è —Ä–∞–∑–≥–æ–≤–æ—Ä–∞ —Å –ª—é–±—ã–º —á–µ–ª–æ–≤–µ–∫–æ–º",
        "aliases": ["–∏–≤–∞–Ω", "–≤–∞–Ω—è", "–∂–∞–¥–∞–Ω", "–∏–≤–∞–Ω—ã—á"],
        "gender": "–º—É–∂—á–∏–Ω–∞",
        "age": "22-25",
        "interesting_facts": [
            "–†–æ–¥–∏–ª—Å—è –Ω–∞ –ö–∞–º—á–∞—Ç–∫–µ, –∞ —Å–µ–π—á–∞—Å —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –°–±–µ—Ä–µ –≤ –í–æ—Ä–æ–Ω–µ–∂–µ.",
            "–ó–∞ –ø–æ–ª—Ç–æ—Ä–∞ –≥–æ–¥–∞ —Ä–∞–±–æ—Ç—ã –ø–æ–ª—É—á–∏–ª —Å–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–æ –æ –ø—Ä–∏–∑–Ω–∞–Ω–∏–∏ –æ—Ç –ø—Ä–µ–¥—Å–µ–¥–∞—Ç–µ–ª—è –¶–ß–ë.",
            "–ü–æ–∫–æ—Ä–∏–ª 3 –≤—É–ª–∫–∞–Ω–∞ –Ω–∞ –ö–∞–º—á–∞—Ç–∫–µ.",
            "–ú–µ—á—Ç–∞–µ—Ç –∏—Å–ø–æ–ª–Ω–∏—Ç—å –ø–µ—Å–Ω—é –≤ –∂–∞–Ω—Ä–µ –ø–æ–ø-—Ä–æ–∫ –≤ –∫–∞—á–µ—Å—Ç–≤–µ —É–ª–∏—á–Ω–æ–≥–æ –º—É–∑—ã–∫–∞–Ω—Ç–∞.",
            "–û—á–µ–Ω—å –±–æ–∏—Ç—Å—è –≥–ª—É–±–∏–Ω—ã –∏ –ª—é–±–∏—Ç —Ä–∏—Å–æ–≤–∞—Ç—å.",
        ],  # –ü–æ–∫–∞ –ø—É—Å—Ç–æ, –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–∏—Ç—å
    },
    "–µ–≤–≥–µ–Ω–∏–π": {
        "name": "–°–µ—Ä–¥—é–∫–æ–≤ –ï–≤–≥–µ–Ω–∏–π –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–∏—á",
        "role": "–õ–∏–¥–µ—Ä –∏ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ç–æ—Ä –∏–¥–µ–π",
        "raw_data": "–ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –∑–¥—Ä–∞–≤—ã–µ –∏–¥–µ–∏ –∏ –∏–¥—Ç–∏ –∫ –∏—Ö —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏... –£—Å–ø–µ–≤–∞–µ—Ç –≤—Å—ë, –∫—Ä–æ–º–µ —Å–Ω–∞...",
        "aliases": ["–µ–≤–≥–µ–Ω–∏–π", "–∂–µ–Ω—è", "—Å–µ—Ä–¥—é–∫–æ–≤", "–∂–µ–∫–∞"],
        "gender": "–º—É–∂—á–∏–Ω–∞",
        "age": "28-35",
        "interesting_facts": ["–õ—é–±–ª—é —Ä–∏—Å–æ–≤–∞—Ç—å"],
    },
    "–≤–æ–ª–æ–¥—è": {
        "name": "–ê—Ç–æ—è–Ω –í–æ–ª–æ–¥—è –ê—Ä–∞—Ä–∞—Ç–æ–≤–∏—á",
        "role": "–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ç–æ—Ä",
        "raw_data": "–ù–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –º—ã—à–ª–µ–Ω–∏–µ, —É–º–µ–Ω–∏–µ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å—ã, –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ª—é–±—ã–º–∏ –ø—É—Ç—è–º–∏, —Å –Ω–µ–π—Ä–æ—Å–µ—Ç—è–º–∏ –Ω–∞ —Ç—ã, –ø—Ä–∞–∫—Ç–∏–∫–∞ —Å–æ–∑–¥–∞–Ω–∏–∏ –∞–≥–µ–Ω—Ç–æ–≤, –Ω–∞–ø–∏—Å–∞–Ω–∏—è –Ω–µ–ø—Ä–æ—Å—Ç—ã—Ö –∫–æ–¥–æ–≤ –ø—É—Ç–µ–º –≤–∞–π–± –∫–æ–¥–∏–Ω–≥–∞. –õ–µ–≥–æ–∫ –≤ –æ–±—â–µ–Ω–∏–∏, –∫–æ–º–∞–Ω–¥–Ω—ã–π",
        "aliases": ["–í–æ–ª–æ–¥—é", "–≤–æ–≤–∞", "–∞—Ç–æ—è–Ω", "–≤–æ–ª–æ–¥–∏–∫"],
        "gender": "–º—É–∂—á–∏–Ω–∞",
        "age": "23",
        "interesting_facts": [
            "–í –¥–µ—Ç—Å—Ç–≤–µ –º–µ—á—Ç–∞–ª —Å—Ç–∞—Ç—å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–º —Ñ—É—Ç–±–æ–ª–∏—Å—Ç–æ–º.",
            "–ì–ª—É–±–æ–∫–æ –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç—Å—è –Ω–µ–π—Ä–æ—Å–µ—Ç—è–º–∏: —É–º–µ–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –∫–∞–∫ –ø—Ä–æ—Å—Ç—ã—Ö –±–æ—Ç–æ–≤, —Ç–∞–∫ –∏ –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã—Ö –ò–ò-–∞–≥–µ–Ω—Ç–æ–≤.",
        ],
    },
    "–∞–Ω–¥—Ä–µ–π": {
        "name": "–ü–∞–Ω–∏–Ω –ê–Ω–¥—Ä–µ–π –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–∏—á",
        "role": "–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä –∏ –∏–¥–µ–π–Ω—ã–π –≤–¥–æ—Ö–Ω–æ–≤–∏—Ç–µ–ª—å",
        "raw_data": "–ü–æ–∑–∏—Ç–∏–≤–Ω—ã–π –∏ –≠–Ω–µ—Ä–≥–∏—á–Ω—ã–π... –°—Ç—Ä–µ—Å—Å–æ—É—Å—Ç–æ–π—á–∏–≤, –≥–∏–±–æ–∫ –∏ –ª–µ–≥–∫–æ –≤–æ—Å–ø—Ä–∏–Ω–∏–º–∞—é –Ω–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é",
        "aliases": ["–∞–Ω–¥—Ä–µ–π", "–∞–Ω–¥—Ä—é—Ö–∞", "–ø–∞–Ω–∏–Ω", "–∞–Ω–¥—Ä–µ–π–∫–∞"],
        "gender": "–º—É–∂—á–∏–Ω–∞",
        "age": "22-23",
        "interesting_facts": [
            "10 –ª–µ—Ç –∑–∞–Ω–∏–º–∞–ª—Å—è –ª–µ–≥–∫–æ–π –∞—Ç–ª–µ—Ç–∏–∫–æ–π (1-–π –≤–∑—Ä–æ—Å–ª—ã–π —Ä–∞–∑—Ä—è–¥).",
            "–û–∫–æ–Ω—á–∏–ª —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç —Å –∫—Ä–∞—Å–Ω—ã–º –¥–∏–ø–ª–æ–º–æ–º.",
            "–ò–Ω–æ–≥–¥–∞ –∏–≥—Ä–∞–µ—Ç –Ω–∞ —É–∫—É–ª–µ–ª–µ.",
            "–°–≤–æ–π –ø–µ—Ä–≤—ã–π —Å–µ—Ä–∏–∞–ª –ø–æ—Å–º–æ—Ç—Ä–µ–ª —Ç–æ–ª—å–∫–æ –≥–æ–¥ –Ω–∞–∑–∞–¥.",
            "–í–ª–∞–¥–µ–ª–µ—Ü –¥–≤—É—Ö —É–ª–∏—Ç–æ–∫ –∏ –∫–æ—Ç–µ–Ω–∫–∞.",
        ],
    },
}

summary_system_prompt = """
–¢—ã ‚Äî –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–∏—à–µ—Ç –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Å–∞–º–º–∞—Ä–∏ –¥–ª—è –≤–∏–∑–∏—Ç–æ–∫.
–¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö —Å–æ—Å—Ç–∞–≤–∏—Ç—å —Å–¥–µ—Ä–∂–∞–Ω–Ω—ã–π –∏ –æ–±—ä–µ–∫—Ç–∏–≤–Ω—ã–π —Ç–µ–∫—Å—Ç.

–ü—Ä–∞–≤–∏–ª–∞:
1.  –ù–∞—á–Ω–∏ —Å –∏–º–µ–Ω–∏ –∏ —Ä–æ–ª–∏.
2.  –û–ø–∏—à–∏ –∫–ª—é—á–µ–≤—ã–µ –∫–∞—á–µ—Å—Ç–≤–∞, —Å—Ç—Ä–æ–≥–æ –ø—Ä–∏–¥–µ—Ä–∂–∏–≤–∞—è—Å—å –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞.
3.  **–ù–µ –ø—Ä–µ—É–≤–µ–ª–∏—á–∏–≤–∞–π –∏ –Ω–µ –¥–æ–±–∞–≤–ª—è–π –æ—Ç —Å–µ–±—è –≥—Ä–æ–º–∫–∏—Ö —ç–ø–∏—Ç–µ—Ç–æ–≤** (–∏–∑–±–µ–≥–∞–π —Å–ª–æ–≤ –≤—Ä–æ–¥–µ "–≥–µ–Ω–∏–∞–ª—å–Ω—ã–π", "–º–∞—Å—Ç–µ—Ä—Å–∫–∏", "–≤–¥–æ—Ö–Ω–æ–≤–ª—è–µ—Ç", "–Ω–µ–≤–µ—Ä–æ—è—Ç–Ω–æ").
4.  –°–æ—Ö—Ä–∞–Ω—è–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π, –Ω–æ –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–π —Ç–æ–Ω.
5.  –û–±—ä–µ–º ‚Äî –Ω–µ –±–æ–ª–µ–µ 150 —Å–ª–æ–≤.
6.  –§–æ—Ä–º–∞—Ç: –∑–∞–≥–æ–ª–æ–≤–æ–∫ "**–í–∏–∑–∏—Ç–∫–∞: [–ò–º—è]**".

–ü—Ä–∏–º–µ—Ä —Ç–æ–≥–æ, –∫–∞–∫ –Ω—É–∂–Ω–æ –¥–µ–ª–∞—Ç—å:
---
–í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: "–ù–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –º—ã—à–ª–µ–Ω–∏–µ, —É–º–µ–Ω–∏–µ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å—ã, –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ª—é–±—ã–º–∏ –ø—É—Ç—è–º–∏, —Å –Ω–µ–π—Ä–æ—Å–µ—Ç—è–º–∏ –Ω–∞ —Ç—ã, –ø—Ä–∞–∫—Ç–∏–∫–∞ —Å–æ–∑–¥–∞–Ω–∏–∏ –∞–≥–µ–Ω—Ç–æ–≤, –Ω–∞–ø–∏—Å–∞–Ω–∏—è –Ω–µ–ø—Ä–æ—Å—Ç—ã—Ö –∫–æ–¥–æ–≤ –ø—É—Ç–µ–º –≤–∞–π–± –∫–æ–¥–∏–Ω–≥–∞. –õ–µ–≥–æ–∫ –≤ –æ–±—â–µ–Ω–∏–∏, –∫–æ–º–∞–Ω–¥–Ω—ã–π"

–•–æ—Ä–æ—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:
"**–í–∏–∑–∏—Ç–∫–∞: –ê—Ç–æ—è–Ω –í–æ–ª–æ–¥—è –ê—Ä–∞—Ä–∞—Ç–æ–≤–∏—á**

–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ç–æ—Ä

–û–±–ª–∞–¥–∞–µ—Ç –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–º –º—ã—à–ª–µ–Ω–∏–µ–º –∏ —É–º–µ–Ω–∏–µ–º –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ä–∞–±–æ—á–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞. –ò–º–µ–µ—Ç –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –æ–ø—ã—Ç –≤ —Ä–∞–±–æ—Ç–µ —Å –Ω–µ–π—Ä–æ—Å–µ—Ç—è–º–∏ –∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ò–ò-–∞–≥–µ–Ω—Ç–æ–≤. –õ–µ–≥–∫–æ –Ω–∞—Ö–æ–¥–∏—Ç –æ–±—â–∏–π —è–∑—ã–∫ —Å –∫–æ–ª–ª–µ–≥–∞–º–∏ –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –∫–æ–º–∞–Ω–¥–µ."
---
"""

image_prompt_system = """
–ù–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö –æ —á–µ–ª–æ–≤–µ–∫–µ, —Å–æ–∑–¥–∞–π –ø—Ä–æ—Å—Ç–æ–π, –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è –ø–æ—Ä—Ç—Ä–µ—Ç–∞ –≤ Kandinsky. 
–ü—Ä–æ–º–ø—Ç –Ω–∞ —Ä—É—Å—Å–∫–æ–º, –¥–æ 200 —Å–∏–º–≤–æ–ª–æ–≤, –±–µ–∑ —Å–ª–æ–≤: –Ω–µ–π—Ä–æ—Å–µ—Ç–∏, –∫–æ–¥, —Å–µ—Ä–≤–µ—Ä—ã, —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏. –í–∫–ª—é—á–∏:
- –ü–æ—Ä—Ç—Ä–µ—Ç [–ò–º—è] ([–ø–æ–ª: –º—É–∂—á–∏–Ω–∞/–∂–µ–Ω—â–∏–Ω–∞]) –≤ —Ä–æ–ª–∏ [role], –≤–æ–∑—Ä–∞—Å—Ç [age].
- –í–Ω–µ—à–Ω–æ—Å—Ç—å –ø–æ –∫–∞—á–µ—Å—Ç–≤–∞–º (—É–ª—ã–±–∫–∞ –¥–ª—è –¥—Ä—É–∂–µ–ª—é–±–Ω–æ—Å—Ç–∏, —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –¥–ª—è –ª–∏–¥–µ—Ä–∞).
- –§–æ–Ω: –æ—Ñ–∏—Å, –ø—Ä–∏—Ä–æ–¥–∞ –∏–ª–∏ –Ω–µ–π—Ç—Ä–∞–ª—å–Ω–∞—è –∫–æ–º–Ω–∞—Ç–∞.
- –°—Ç–∏–ª—å: PIXAR.
–ü—Ä–∏–º–µ—Ä: '–†–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π –ø–æ—Ä—Ç—Ä–µ—Ç –∂–µ–Ω—â–∏–Ω—ã-–∞–Ω–∞–ª–∏—Ç–∏–∫–∞ 30-35 –ª–µ—Ç –≤ –æ—Ñ–∏—Å–µ, —É–ª—ã–±–∫–∞, —Å–≤–µ—Ç–ª–æ–µ –æ—Å–≤–µ—â–µ–Ω–∏–µ'.
"""


@bot.message_handler(commands=["start"])
def send_welcome(message):
    welcome_text = "–ü—Ä–∏–≤–µ—Ç! –Ø - –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –≥–∏–¥ –ø–æ –∫–æ–º–∞–Ω–¥–µ '–û–≥–Ω–ò–ò', –≥–¥–µ –æ–≥–æ–Ω—å –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è —Å –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–æ–º. üòé –Ø –º–æ–≥—É —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –æ –Ω–∞—à–∏—Ö –∫—Ä—É—Ç—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–∞—Ö. –ü—Ä–æ—Å—Ç–æ —Å–∫–∞–∂–∏: '—Ä–∞—Å—Å–∫–∞–∂–∏ –ø—Ä–æ [–∏–º—è]' –∏–ª–∏ '–¥–∞–≤–∞–π –ø—Ä–æ [–∏–º—è]'. –ù–∞–ø—Ä–∏–º–µ—Ä, '—Ä–∞—Å—Å–∫–∞–∂–∏ –ø—Ä–æ –ù–∞–¥–µ–∂–¥—É'. –° –∫–æ–≥–æ –Ω–∞—á–Ω—ë–º?"
    bot.reply_to(message, welcome_text)


@bot.message_handler(func=lambda message: True)
def handle_message(message):
    text = message.text.lower()
    found_participant = None

    # –°–Ω–∞—á–∞–ª–∞ –∏—â–µ–º –ø–æ –∫–ª—é—á–µ–≤—ã–º —Ñ—Ä–∞–∑–∞–º "—Ä–∞—Å—Å–∫–∞–∂–∏ –ø—Ä–æ"
    trigger_phrases = ["—Ä–∞—Å—Å–∫–∞–∂–∏ –ø—Ä–æ ", "–¥–∞–≤–∞–π –ø—Ä–æ "]
    for phrase in trigger_phrases:
        if phrase in text:
            search_query = text.split(phrase)[1].strip()
            for key, data in participants.items():
                if search_query in data["aliases"]:
                    found_participant = data
                    break
            if found_participant:
                break

    # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏, –∏—â–µ–º –ø–æ –ø—Ä–æ—Å—Ç–æ–º—É —É–ø–æ–º–∏–Ω–∞–Ω–∏—é –∏–º–µ–Ω–∏
    if not found_participant:
        for data in participants.values():
            if any(
                f" {alias} " in f" {text} " or text == alias
                for alias in data["aliases"]
            ):
                found_participant = data
                break

    if found_participant:
        name = found_participant["name"]

        # --- –ë–õ–û–ö –ì–ï–ù–ï–†–ê–¶–ò–ò –¢–ï–ö–°–¢–û–í–û–ô –í–ò–ó–ò–¢–ö–ò ---

        summary_user_prompt = f"–°–æ–∑–¥–∞–π –≤–∏–∑–∏—Ç–∫—É –Ω–∞ –æ—Å–Ω–æ–≤–µ —ç—Ç–∏—Ö –¥–∞–Ω–Ω—ã—Ö: –ò–º—è: {found_participant['name']}, –†–æ–ª—å: {found_participant['role']}, –î–∞–Ω–Ω—ã–µ: {found_participant['raw_data']}"
        summary = gigachat_manager.get_analysis(
            summary_system_prompt, summary_user_prompt
        )

        final_message = summary
        facts = found_participant.get("interesting_facts", [])

        if facts:
            facts_text = "\n\n**–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Ñ–∞–∫—Ç—ã:**\n"
            for fact in facts:
                facts_text += f"‚Ä¢ {fact}\n"
            final_message += facts_text

        # –ò–ó–ú–ï–ù–ï–ù–ò–ï –ó–î–ï–°–¨: bot.reply_to -> bot.send_message
        bot.send_message(message.chat.id, final_message, parse_mode="Markdown")

        # --- –ë–õ–û–ö –ì–ï–ù–ï–†–ê–¶–ò–ò –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–Ø ---

        image_prompt_user = f"–°–æ–∑–¥–∞–π –ø—Ä–æ–º–ø—Ç –¥–ª—è Kandinsky: {found_participant['raw_data']} (–ø–æ–ª: {found_participant['gender']}, –≤–æ–∑—Ä–∞—Å—Ç: {found_participant['age']})"
        image_prompt = gigachat_manager.get_analysis(
            image_prompt_system, image_prompt_user
        )
        logger.info(f"–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è '{name}' —Å –ø—Ä–æ–º–ø—Ç–æ–º: {image_prompt}")

        if fusionbrain_api and pipeline_id:
            try:
                uuid = fusionbrain_api.generate(image_prompt, pipeline_id)
                files = fusionbrain_api.check_generation(uuid)

                if files and len(files) > 0:
                    img_base64 = files[0]
                    img_data = base64.b64decode(img_base64)
                    bio = io.BytesIO(img_data)
                    bio.name = "generated_image.jpg"
                    bot.send_photo(
                        message.chat.id, bio, caption=f"–ü–æ—Ä—Ç—Ä–µ—Ç {name} –æ—Ç Kandinsky üé®"
                    )
                else:
                    logger.warning(
                        f"–ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è '{name}'. –û—Ç–≤–µ—Ç –æ—Ç API –ø—É—Å—Ç–æ–π."
                    )
                    # –ò–ó–ú–ï–ù–ï–ù–ò–ï –ó–î–ï–°–¨: bot.reply_to -> bot.send_message
                    bot.send_message(
                        message.chat.id,
                        "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (–≤–æ–∑–º–æ–∂–Ω–æ, —Å—Ä–∞–±–æ—Ç–∞–ª–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—è –∏–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞).",
                    )

            except Exception as e:
                logger.error(
                    f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è '{name}': {e}"
                )
                # –ò–ó–ú–ï–ù–ï–ù–ò–ï –ó–î–ï–°–¨: bot.reply_to -> bot.send_message
                bot.send_message(
                    message.chat.id,
                    f"–¢–µ–∫—Å—Ç –≥–æ—Ç–æ–≤, –Ω–æ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}",
                )
        else:
            # –ò–ó–ú–ï–ù–ï–ù–ò–ï –ó–î–ï–°–¨: bot.reply_to -> bot.send_message
            bot.send_message(
                message.chat.id,
                "–¢–µ–∫—Å—Ç –≥–æ—Ç–æ–≤! –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞.",
            )

    else:
        # –ï—Å–ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã—Ö
        participant_names = ", ".join(
            [data["aliases"][0].capitalize() for data in participants.values()]
        )
        # –ò–ó–ú–ï–ù–ï–ù–ò–ï –ó–î–ï–°–¨: bot.reply_to -> bot.send_message
        bot.send_message(
            message.chat.id,
            f"–ù–µ –ø–æ–Ω—è–ª, –æ –∫–æ–º —Ç—ã. –Ø –º–æ–≥—É —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –ø—Ä–æ: {participant_names}. –ü–æ–ø—Ä–æ–±—É–π, –Ω–∞–ø—Ä–∏–º–µ—Ä, —Ç–∞–∫: '—Ä–∞—Å—Å–∫–∞–∂–∏ –ø—Ä–æ –ù–∞–¥—é'.",
        )


if __name__ == "__main__":
    logger.info("–ó–∞–ø—É—Å–∫ Telegram-–±–æ—Ç–∞...")
    bot.polling(none_stop=True)
